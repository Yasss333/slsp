% Clear the workspace and command window

clc; 

close all; 

clear all; 

% Define matrices A and B

A = reshape([1 1 -2 -2 1 1.3 1 -1], [2, 4]); 

B = reshape([1 1 1.2 5 7.2 1 -1 0], [2, 4]); 

% Display original matrices

disp('Matrix A:'); 

disp(A); 

disp('Matrix B:'); 

disp(B); 
% Matrix Addition (requires same dimensions)

MATRIXADDITION = A + B; 

disp('Matrix Addition (A + B):'); 

disp(MATRIXADDITION); 

% Matrix Subtraction (requires same dimensions)

MATRIXSUBTRACTION = A - B; 

disp('Matrix Subtraction (A - B):'); 

disp(MATRIXSUBTRACTION); 

% Matrix Multiplication (A*B' works when A is m×n and B is 

k×n)

MATRIXMULTIPLICATION = A * B'; 

disp('Matrix Multiplication (A * B''):'); 

disp(MATRIXMULTIPLICATION); 

% Element-wise Multiplication (requires same dimensions)

ELEMENTWISEMULTIPLICATION = A .* B; 

disp('Element-wise Multiplication (A .* B):'); 

disp(ELEMENTWISEMULTIPLICATION); 

% Right Division (using pseudoinverse for meaningful result)

RIGHTDIVISION = A / B; 

disp('Right Division (A / B):'); 

disp(RIGHTDIVISION); 

% Left Division (using pseudoinverse for meaningful result)

LEFTDIVISION = A \ B; 

disp('Left Division (A \ B):'); 

disp(LEFTDIVISION); 

% Element-wise Right Division

ELEMENTWISERIGHTDIVISION = A ./ B; 

disp('Element-wise Right Division (A ./ B):'); 

disp(ELEMENTWISERIGHTDIVISION); 

% Element-wise Left Division

ELEMENTWISELEFTDIVISION = A .\ B; 

disp('Element-wise Left Division (A .\ B):'); 

disp(ELEMENTWISELEFTDIVISION); 

% Matrix Inverse (requires square matrix)

% Creating a square matrix from A for inverse
Asquare = A * A'; 

INVERSE = inv(Asquare); 

disp('Inverse of A*A'':'); 

disp(INVERSE); 

% Matrix Exponentiation (requires square matrix)

EXPONENTOFMATRIX = Asquare^2; 

disp('Exponent of Matrix (A*A'')^2:'); 

disp(EXPONENTOFMATRIX); 

% Element-wise Exponentiation

ELEMENTWISEEXPONENTOFMATRIX = A.^2; % Changed to A.^2 for 

simplicity

disp('Element-wise Exponent of Matrix (A.^2):'); 

disp(ELEMENTWISEEXPONENTOFMATRIX); 

% Matrix Transpose

TRANSPOSE = A'; 

disp('Transpose (A''):'); 

disp(TRANSPOSE); 

% Array Transpose

ARRAYTRANSPOSE = A.'; 

disp('Array Transpose (A.''):'); 

disp(ARRAYTRANSPOSE); 
